; Table des virtuelles : tableau d'indirection des méthodes des classes
	; INFOCLASSE Musicien
	LOADA Musicien_getInstruments
	LOADA Musicien_redefinition
	; INFOCLASSE Fanfaron
	LOADA Musicien_getInstruments
	LOADA Fanfaron_redefinition
	LOADA Fanfaron_getIsSouba
	; INFOCLASSE Concerto



	; Appel de la fonction main
	CALL (LB) Concerto_main
	 LOADL "FIN DU PROGRAMME !\n"
	SUBR SOut
	LOADL "VALEUR DE RETOUR : "
	SUBR SOut
	SUBR IOut
	LOADL "\n"
	SUBR SOut
	HALT	
; En cas d'exception 
_NPE_
	LOADL "Null Pointer Exception"
	SUBR SOut
	HALT

	; Constructeur par défaut de la classe Musicien
Musicien_defaut
	; Allocation de l'espace mémoire
	LOADL 2 ;Taille de l'objet + TDV
	SUBR MAlloc ; Allocation 
	LOADL 0 ; @TDV de la classe
	LOAD (1) -2[ST] ; On récupère l'@ fournie par le malloc
	STOREI (1) ; Et on affecte la valeur de la TDV dans l'objet crée
	; Initialisation des attributs
		; Initialisation de instruments (type entier) 
	LOADL 42 ; Valeur par défaut: 42
	; On récupère l'@ de this
	LOAD (1) 3[LB]
	LOADL 1
	SUBR IAdd
	STOREI (1) ; Et on sauve le tout !
	RETURN (1) 0

; Constructeur de la classe Musicien
Musicien_Musicien_entier
	; Appel au constructeur par défaut
	CALL (LB) Musicien_defaut
	; Ecriture mémoire
	; -> Calul de l'expression
	; Lecture mémoire
	; @Parametre : i
	LOADA -1 [LB]
	LOADI (1)
	; -> Calcul de l'adresse
	; On empile this
	LOAD (1) 3[ST]
	; @Attribut : instruments
	LOADL 1
	SUBR IAdd
	STOREI (1)
	LOAD (1) 3[LB] ; On rempile l'@ du pointeur à retourner
	RETURN (1) 1

; Méthode getInstruments de la classe Musicien
Musicien_getInstruments
	; Lecture mémoire
	; On empile this
	LOAD (1) -1[ST]
	; @Attribut : instruments
	LOADL 1
	SUBR IAdd
	LOADI (1)
	; Retour de la fonction : 1 parametres
	RETURN (1) 1

; Méthode redefinition de la classe Musicien
Musicien_redefinition
	; Ecriture mémoire
	; -> Calul de l'expression
	LOADL 42
	; -> Calcul de l'adresse
	; On empile this
	LOAD (1) -1[ST]
	; @Attribut : instruments
	LOADL 1
	SUBR IAdd
	STOREI (1)
	RETURN (1) 1

	; Constructeur par défaut de la classe Fanfaron
Fanfaron_defaut
	; Allocation de l'espace mémoire
	LOADL 3 ;Taille de l'objet + TDV
	SUBR MAlloc ; Allocation 
	LOADL 2 ; @TDV de la classe
	LOAD (1) -2[ST] ; On récupère l'@ fournie par le malloc
	STOREI (1) ; Et on affecte la valeur de la TDV dans l'objet crée
	; Initialisation des attributs
		; Initialisation de instruments (type entier) 
	LOADL 42 ; Valeur par défaut: 42
	; On récupère l'@ de this
	LOAD (1) 3[LB]
	LOADL 1
	SUBR IAdd
	STOREI (1) ; Et on sauve le tout !
		; Initialisation de isSouba (type booléen) 
	LOADL 0 ; Valeur par défaut: FAUX
	; On récupère l'@ de this
	LOAD (1) 3[LB]
	LOADL 2
	SUBR IAdd
	STOREI (1) ; Et on sauve le tout !
	RETURN (1) 0

; Constructeur de la classe Fanfaron
Fanfaron_Fanfaron_booleen
	; Appel au constructeur par défaut
	CALL (LB) Fanfaron_defaut
	; Ecriture mémoire
	; -> Calul de l'expression
	LOADL 3
	; -> Calcul de l'adresse
	; On empile this
	LOAD (1) 3[ST]
	; @Attribut : instruments
	LOADL 1
	SUBR IAdd
	STOREI (1)
	; Ecriture mémoire
	; -> Calul de l'expression
	; Lecture mémoire
	; @Parametre : iS
	LOADA -1 [LB]
	LOADI (1)
	; -> Calcul de l'adresse
	; On empile this
	LOAD (1) 3[ST]
	; @Attribut : isSouba
	LOADL 2
	SUBR IAdd
	STOREI (1)
	LOAD (1) 3[LB] ; On rempile l'@ du pointeur à retourner
	RETURN (1) 1

; Méthode getIsSouba de la classe Fanfaron
Fanfaron_getIsSouba
	; Lecture mémoire
	; On empile this
	LOAD (1) -1[ST]
	; @Attribut : isSouba
	LOADL 2
	SUBR IAdd
	LOADI (1)
	; Retour de la fonction : 1 parametres
	RETURN (1) 1

; Méthode redefinition de la classe Fanfaron
Fanfaron_redefinition
	; Ecriture mémoire
	; -> Calul de l'expression
	LOADL 0
	; -> Calcul de l'adresse
	; On empile this
	LOAD (1) -1[ST]
	; @Attribut : instruments
	LOADL 1
	SUBR IAdd
	STOREI (1)
	RETURN (1) 1

	; Constructeur par défaut de la classe Concerto
Concerto_defaut
	; Allocation de l'espace mémoire
	LOADL 1 ;Taille de l'objet + TDV
	SUBR MAlloc ; Allocation 
	LOADL 5 ; @TDV de la classe
	LOAD (1) -2[ST] ; On récupère l'@ fournie par le malloc
	STOREI (1) ; Et on affecte la valeur de la TDV dans l'objet crée
	; Initialisation des attributs
	RETURN (1) 0

; Méthode main de la classe Concerto
Concerto_main
	;Appel au constructeur :
	; Param 1
	LOADL 1
	CALL (LB) Fanfaron_Fanfaron_booleen ; Appel du constructeur
	; Valeur variable
	LOAD (1) 3[LB]
	; Vérification d'une NPE
	LOAD (1) -1[ST]
	JUMPIF (0) _NPE_
	; On empile this
	LOAD (1) -1[ST]
	; Appel de la méthode Musicien::getInstruments
	LOADL 0 ; Pour le CALLI (cf doc de tam)
	LOAD (1) -2[ST] ; On récupère la valeur du pointeur
	LOADI (1) ; On récupère l'@ de la TDV
	LOADL 1 ; Id de la méthode dans la TDV
	SUBR IAdd
	; On obtient l'adresse réelle de la méthode
	LOADI (1) ; Que l'on va chercher et mettre en tête de pile
	CALLI ; Et on appelle la méthode.. OUF
	; Valeur variable
	LOAD (1) 3[LB]
	; Vérification d'une NPE
	LOAD (1) -1[ST]
	JUMPIF (0) _NPE_
	; On empile this
	LOAD (1) -1[ST]
	; Appel de la méthode Fanfaron::getIsSouba
	LOADL 0 ; Pour le CALLI (cf doc de tam)
	LOAD (1) -2[ST] ; On récupère la valeur du pointeur
	LOADI (1) ; On récupère l'@ de la TDV
	LOADL 3 ; Id de la méthode dans la TDV
	SUBR IAdd
	; On obtient l'adresse réelle de la méthode
	LOADI (1) ; Que l'on va chercher et mettre en tête de pile
	CALLI ; Et on appelle la méthode.. OUF
	; Valeur variable
	LOAD (1) 3[LB]
	; Vérification d'une NPE
	LOAD (1) -1[ST]
	JUMPIF (0) _NPE_
	; On empile this
	LOAD (1) -1[ST]
	; Appel de la méthode Fanfaron::redefinition
	LOADL 0 ; Pour le CALLI (cf doc de tam)
	LOAD (1) -2[ST] ; On récupère la valeur du pointeur
	LOADI (1) ; On récupère l'@ de la TDV
	LOADL 1 ; Id de la méthode dans la TDV
	SUBR IAdd
	; On obtient l'adresse réelle de la méthode
	LOADI (1) ; Que l'on va chercher et mettre en tête de pile
	CALLI ; Et on appelle la méthode.. OUF
	RETURN (1) 1

